package chap02;
import java.util.Scanner;
public class KetboardInput2 {
	public static void main(String[] args) {
		Scanner stdIn = new Scanner(System.in);
		System.out.print("Input the name, age and weight devided with spaces : ");
		String name = stdIn.next();
		int i = stdIn.nextInt();
		double d = stdIn.nextDouble();
		System.out.println(name + "씨의 나이는" + i + "세이고");
		System.out.println("몸무게는 " + d + "kg입니다.");
	}
}


package chap03;
public class NumericTypeTest {
	public static void main(String[] args) {
		//자바에서 정수리터럴은 무조건 int형으로 취급한다. 한다고 해도 -128~127까지만 허용된다.
		byte a = 127;
		System.out.println("127을 저장한 byte값은 : " + a);
		short b = 32767;
		System.out.println("32767을 저장한 byte값은 : " + b);
		int c = 2147483647;
		System.out.println("2147483647을 저장한 byte값은 : " + c);
		long d = 9223372036854775807L;
		System.out.println("9223372036854775807L을 저장한 byte값은 : " + d);
	}
}


package chap03;
public class OctHexTest {
	public static void main(String[] args) {
		int a = 100;
		int b = 0b11000100;
		int c = 0144;
		int d = 0x64;
		System.out.println("10진수 100 = " + a); //100
		System.out.println("2진수 0b11000100 = " + b); //100
		System.out.println("8진수 0144 = " + c); //100
		System.out.println("16진수 0x64 = " + d); //100
		System.out.println("2진수 0b111 = " + 0b111); //7
		System.out.println("8진수 0777 = " + 0777); //511
		System.out.println("16진수 0xfff = " + 0xfff); //4095
	}
}


package chap03;
public class FloatDoubleTest {
	public static void main(String[] args) {
		float a = 12345678901234567890.0f; //float형을 사용할때는 마지막에 f를 꼭 붙여야 한다.
		double b = 12345678901234567890.0; //묵시적으로 실수는 double로 간주한다. 그러므로 끝에 d를 붙이지 않아도 된다.
		System.out.println("float 변수 a의 값 : " +a); //1.23456789E19
		System.out.println("double 변수 b의 값 : " +b); //1.2345678901234567890E19
		float c = 1.0f / 3.0f;
		double d = 1.0 / 3.0; //두 결과값 모두 무한히 반복되는 수지만 표현 가능 범위 내의 부분에서만 저장되고 출력된다.
		System.out.println("float 변수 c의 값 : " +c); //0.33333334
		System.out.println("double 변수 d의 값 : " +d); //0.3333333333333333
	}
}


package ch03;
public class TestCharString {
	public static void main(String[] args) {
		char ch1 = 'A';
		String name = "홍길동";
		System.out.printf("%c\n", 'A');
		System.out.printf("%s\n", "AB");
		System.out.printf("%s\n", "AB CCCC");
		System.out.printf("%s씨 %s\n%s\n", name, "재미있는 자바언어", "열심히 하세요.");
	}
}



package ch03;
import java.util.Scanner;
public class DataTypeOpertion1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("Type first number : ");
		int first = stdin.nextInt();
		System.out.print("Type second number : ");
		int second = stdin.nextInt();
		double avg1 = (first + second) / 2;
		System.out.println("Integral number Calcuation : Average is ("+first+" + "+second+")/2" + " = "+ ""+avg1+"");
		double avg2 = (first + second) / 2.0;
		System.out.println("Real number Calcuation : Average is ("+first+" + "+second+")/2.0" + " = "+ ""+avg2+"");
	}
}



package ch03;
public class TypeCastingTest1 {
	public static void main(String[] args) {
		byte b = 120;
		int i = b;
		System.out.println("확대 형 변환 : " +i); //120
		int j = 259;
		double d = 259.428;
		System.out.println("축소 형 변환 결과");
		b = (byte) j; //int형의 값을 byte형으로 형 변환하여 저장(값 손실)
		System.out.println("int 259를 byte로 변환 : " +b); //3
		i = (int) d; //double형의 값을 int형으로 형 변환하여 저장(값 손실)
		System.out.println("double 259.428을 int로 변환 : " +i); //259
		b = (byte) d; //double형의 값을 byte형으로 형 변환하여 저장(값 손실)
		System.out.println("double 259.428을 byte로 변환 : " +b); //3
	}
}



package ch03;
public class ArithmeticOPTest1 {
	public static void main(String[] args) {
		int a = 7, b = 2;
		int sum = a + b;
		System.out.println("a + b = " +sum);
		int sub = a - b;
		System.out.println("a - b = " +sub);
		int mul = a * b;
		System.out.println("a * b = " +mul);
		int div = a / b;
		System.out.println("a / b = " +div);
		int mod = a % b;
		System.out.println("a % b = " +mod);
		int c = ++a;
		System.out.println("a 전위 증가 연산 (prefix) = " +c);
		System.out.println("a = " +a);
		int d = b++;
		System.out.println("b의 후위 증가 연산 (postfix) = " +d);
		System.out.println("b = " +b);
		//전위 증가 연산이든 후위 증가 연산이든 먼저 나온 명령어대로 처리한다.
	}
}



package ch03;
public class ArithmeticOPTest2 {
	public static void main(String[] args) {
		byte a = 127, b = 2;
		byte c = (byte)(a * b);
		System.out.println("a * b의 결과를 byte로 출력 : " +c);
		int d = a * b;
		System.out.println("a * b의 결과를 int로 출력 : " +d);
		int i = 1000000, j = 1000000; //이미 둘다 int의 범위를 벗어남
		int k = i * j; //그러므로 k도 당연히 int의 범위를 벗어나게 된다
		System.out.println("i * j의 결과를 int로 출력 : " +k); //X
		long m = (long)(i * j); //이미 int의 범위를 벗어난 상태에서 형 변환하는거라 소용 없음
		System.out.println("i * j의 결과를 long으로 변환한 후 출력 : " +m); //X
		m = (long)i * j; //변수 i를 long 변환 후에 long 곱연산
		System.out.println("i를 long값으로 변환후에 곱셈(long 연산)하여 출력 : " +m); //O
		m = (long) i * (long)j; //각각의 long으로 형 변환 후 long 연산
		System.out.println("백만을 long으로 변환 후 곱셈(long 연산)하여 출력 : " +m); //O
	}
}



package ch03;
public class ArithmeticOPTEST3 {
	public static void main(String[] args) {
		int a = 10;
		System.out.println("(++a + ++a)의 결과는 : " + (++a + ++a)); //11 + 12
		a = 10;
		System.out.println("(++a - ++a)의 결과는 : " + (++a - ++a)); //11 - 12
		a = 10;
		System.out.println("(a++ + a++)의 결과는 : " + (a++ + a++)); //10 + 11
		a = 10;
		System.out.println("(a++ - a++)의 결과는 : " + (a++ - a++)); //10 - 11
		a = 10;
		System.out.println("(++a + a++)의 결과는 : " + (++a + a++)); //11 + 11
		a = 10;
		System.out.println("(++a - a++)의 결과는 : " + (++a - a++)); //11 - 11
		a = 10;
		System.out.println("(a++ + ++a)의 결과는 : " + (a++ + ++a)); //10 + 12
		a = 10;
		System.out.println("(a++ - ++a)의 결과는 : " + (a++ - ++a)); //10 - 12
	}
}



package ch03;
public class RelationalOPTest {
	public static void main(String[] args) {
		byte a = 20;
		double d = 3.14;
		boolean flag;
		flag = a > d;
		System.out.println("a가 b보다 큰가?\t" +flag);
		flag = a == 20.0f; //byte형이 float형으로 자동 변환
		System.out.println("a가 20.0f보다 같은가?\t" +flag);
		flag = 10 != 10.0; //정수 리터럴 10이 실수로 변환되어 비교
		System.out.println("10이 10.0과 같지 않은가?\t" +flag);
		flag = 10 <= 20;
		System.out.println("10이 20보다 작거나 같은가?\t" +flag);
		System.out.println("10이 20보다 작은가?\t" + (10 < 20)); //관계연산자를 직접 출력문에 사용
		System.out.println("10이 20보다 크거나 같은가?\t" + (10 >= 20));
	}
}



package ch03;
public class LogicalOPTest {
	public static void main(String[] args) {
		boolean a = (20 > 10) || (30 > 40); //OR논리연산자
		System.out.println("20이 10보다 크거나 또는 30이 40보다 큰가?" +a);
		a = (20 > 10) && (30 > 40); //AND논리연산자
		System.out.println("20이 10보다 크고 30이 40보다 큰가?" +a);
		a = !true; //NOT논리연산자
		System.out.println("true의 !(not)은?" +a);
		System.out.println("20이 10보다 크거나 또는 30이 40보다 큰가?" + ((20 > 10) || (30 > 40)));
		System.out.println("20이 10보다 크고 30이 40보다 큰가?" + ((20 > 10) && (30 > 40)));
		System.out.println("true의 !(not)은??" + (!true));
	}
}



package ch03;
public class BitOPTest {
	public static void main(String[] args) {
		int a = 14;
		int b = 11; //14에 대한 2진법 표현
		System.out.println("a = " +a+"("+Integer.toBinaryString(a)+")");//14(1110)
		System.out.println("b = " +b+"("+Integer.toBinaryString(b)+")");//11(1011)
		System.out.println("a & b = " +(a & b)+"("+Integer.toBinaryString(a & b)+")");//10(1010)
		System.out.println("a | b = " +(a | b)+"("+Integer.toBinaryString(a | b)+")");//15(1111)
		System.out.println("a ^ b = " +(a ^ b)+"("+Integer.toBinaryString(a ^ b)+")");//5(101)
		System.out.println("~b = " +(~b)+"("+Integer.toBinaryString(~b)+")");
		//-12(11111111111111111111111111110100)
	}
}



package ch03;
public class AssignOPTest {
	public static void main(String[] args) {
		int a = 10;
		System.out.println("a = " +a);
		a += 4; //a = a + 4, 14
		System.out.println("a += 4 result : " +a);
		a %= 4; //a = a % 4, 2
		System.out.println("a %= 4 result : " +a);
		a <<= 4; //a = a << 4, 2를 왼쪽으로 4비트 시프트, 32출
		System.out.println("a <<= 4 result : " +a);
		boolean b = false;
		b &= a > 2; //b = b & a > 2를 수행, false
		System.out.println("b &= a > 2 result : " +b);
		b |= a > 2; //b = b | a > 2를 수행, true
		System.out.println("b |= a > 2 result : " +b);
	}
}



package ch03;
import java.util.Scanner;
public class TernaryOPTest {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("한개의 숫자를 입력 : ");
		int a = stdin.nextInt();
		boolean flag;
		flag = (a % 2 ==0) ? true : false; //입력받은 숫자에 따라 true일지 false일지 변환
		System.out.print(a +"이(가) 짝수입니까? : ");
		System.out.println(flag);
	}
}



package ch03;
public class StringTest1 {
	public static void main(String[] args) {
		String str1 = "아! 대한민국";
		String str2 = "Korea";
		System.out.println(str1 + str2);
		System.out.println("아! 대한민국\nKorea");
		int a = 1000;
	    int b = 2000;
	    System.out.println(str1 + a + b + "리 금수강산 "); //정수형 변수 연결 출력, 10002000
	    System.out.println(str1 + (a + b) + "리 금수강산 "); //정수형 변수의 덧셈을 우선 수행 출력, 3000
	    System.out.println(a + b + "리 금수강산 "); //정수형 변수의 덧셈 먼저 나옴
	    System.out.println('3' + "천리 금수강산 "); //'3'이라는 문자를 문자열과 연결
	    System.out.println('3' + 2997 + "리 금수강산 "); //'3'이라는 문자를 숫자와 연결, 51(유니코드)+2997=3028
	}
}



package ch04;
import java.util.Scanner;
public class SimpleIFTest3 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("type the score : ");
		int grade = stdin.nextInt();
		if(grade >= 90)  {
			System.out.println("congrates ");
			System.out.println("you get A");
		}
		System.out.println("Thank you");
	}
}



package ch04;
import java.util.Scanner;
public class DoubleIFTest1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.println("type the score : ");
		int grade = stdin.nextInt();
		if(grade >= 90) //{}대괄호가 없을 경우 밑에 한줄만 실행된다.
			System.out.println("grade A");
		else
			System.out.println("grade A fail");
		System.out.println("thank you");
	}
}



package ch04;
import java.util.Scanner;
public class DoubleIFTest2 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("type the number : ");
		int c = stdin.nextInt();
		if(c < 0) {
			System.out.print("num " +c);
			System.out.println(" is minus");
		}
		else {
			System.out.print("num " +c);
			System.out.println(" is plus");
		}
	}
}



package ch04;
import java.util.Scanner;
public class MultiIFTest1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("type the score : ");
		int s = stdin.nextInt();
		if(s >= 90)
			System.out.println("grade A");
		else if(s >= 80)
			System.out.println("grade B");
		else if(s >= 70)
			System.out.println("grade C");
		else if(s >= 60)
			System.out.println("grade D");
		else
			System.out.println("grade fail");
	}
}



package ch04;
import java.util.Scanner;
public class MultiIFTest2 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("type the number : ");
		int c = stdin.nextInt();
		if(c < 0) {
			System.out.print("number " +c);
			System.out.println(" is minus");
		}
		else if (c == 0)
			System.out.println("number is 0");
		else {
			System.out.print("number " +c);
			System.out.println(" is plus");
		}
	}
}



package ch04;
import java.util.Scanner;
public class ComConditionTest1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("type a month in number : ");
		int m = stdin.nextInt();
		if(3 <= m && m <= 5)
			System.out.println("Spring");
		else if(6 <= m && m <= 8)
			System.out.println("Summer");
		else if(9 <= m && m <= 11) 
			System.out.println("Fall");
		else if(1 == m || m == 2 || m == 12)
			System.out.println("Winter");
		else
			System.out.println("No season included");
	}
}



package chap04;
import java.util.Scanner;
public class SwitchTest1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("type a month in number : ");
		int m = stdin.nextInt();
		String Mtos;
		switch(m) {
		case 12: //하나의 case문과 같은 효과
		case 1:
		case 2:
			Mtos = "Winter";
			break;
		case 3:
		case 4:
		case 5:
			Mtos = "Spring";
			break;
		case 6:
		case 7:
		case 8:
			Mtos = "Summer";
			break;
		case 9: //각각의 case문을 수행하고 아래 case문 실행
			System.out.print("Awsome September, ");
		case 10:
			System.out.print("Beautiful October, ");
		case 11:
			System.out.print("November's falling leaves ");
			Mtos = "is Fall";
			break;
		default: //case를 제외한 경우일 때(else)
			Mtos = "error(choose 1~12)";
			break;
		}
		System.out.println(Mtos);
	}
}



package chap04;
import java.util.Scanner;
public class SwitchTest2 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("type a month in english : ");
		String m = stdin.next(); //int형 변수가 아니므로 nextInt가 아니다
		String Mtos;
		switch(m) {
		case "December":
		case "January":
		case "Febuary":
			Mtos = "Winter";
			break;
		case "March":
		case "April":
		case "May":
			Mtos = "Spring";
			break;
		case "June":
		case "July":
		case "August":
			Mtos = "Summer";
			break;
		case "September":
			System.out.print("Awsome September, ");
		case "October":
			System.out.print("Beautiful October, ");
		case "November":
			System.out.print("November's falling leaves ");
			Mtos = "is Fall";
			break;
		default:
			Mtos = "error(choose 1~12)";
			break;
		}
		System.out.println(Mtos);
	}
}



package chap04;
public class SwitchTest3 {
	public static void main(String[] args) {
		char c = 'A'; //"우수한 성적입니다" 실행
		//char c = 'a'; "정확한 성적이 아닙니다" 실행
		switch(c) {
		case 'A':
		case 'B':
			System.out.print("우수한 성적입니다");
			break;
		case 'C':
		case 'D':
			System.out.print("분발하세요");
			break;
		case 'F':
			System.out.print("많은 노력이 필요합니다");
			break;
		default:
			System.out.print("정확한 성적이 아닙니다");
		}
	}
}



package ch05;
public class WhileTest1 {
	public static void main(String[] args) {
		int hap = 0, count = 1;
		while(count <= 10) {
			hap += count;
			count += 1;
		}
		System.out.println("1부터 10까지의 합은 "+hap+"입니다.");
	}
}



package ch05;
import java.util.Scanner;
public class WhileTest2 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("원하는 단을 입력하세요 : ");
		int d = stdin.nextInt();
		int x = 1;
		while(x <= 9) {
			System.out.println(d+ " * " +x+ " = " +d * x);
			x++;
		}
	}
}


package ch05;
import java.util.Scanner;
public class WhileTest3 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("원하는 팩토리얼 값을 입력 : ");
		int f = stdin.nextInt();
		int fV = f;
		while(f > 1) {
			System.out.print(f+ " * ");
			fV *= --f;
		}
		System.out.println("1 = " +fV);
	}
}



package ch05;
public class DoWhileTest1 {
	public static void main(String[] args) {
		int h = 0, c = 1;
		do {
			h += c;
			c += 1;
		} while(c <= 10);
		System.out.println("1~10까지의 합은 " +h+" 입니다");
	}
}



package ch05;
import java.util.Scanner;
public class DoWhileTest2 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		int m;
		do {
			System.out.print("type a month in number(end:0) : ");
			m = stdin.nextInt();
			if(3 <= m && m <= 5)
				System.out.println("Spring");
			else if(6 <= m && m <= 8)
				System.out.println("Summer");
			else if(9 <= m && m <= 11)
				System.out.println("Fall");
			else if(1 == m || m ==2 || m == 12)
				System.out.println("Winter");
			else if(m != 0) //계절에 해당이 안되고 0이 아니면 실행
				System.out.println("Wrong enter");
		} while(m != 0); //입력된 값이 0이 아니면 계속 반복
		System.out.println("Thank you");
	}
}



package ch05;
public class ForTest1 {
	public static void main(String[] args) {
		int i , sum = 0;
		for(i=1; i<=10; i++) {
			sum += i;
		}
		System.out.println("1~10까지의 합은 " + sum + "입니다.");
	}
}



package ch05;
import java.util.Scanner;
public class ForTest2 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("정수 입력 : ");
		int num = stdin.nextInt();
		System.out.print(num + "의 약수 : ");
		for(int i = 1; i <= num; i++) {
			if(num % i == 0) {
				System.out.print("   "+i);
			}
		}
	}
}



package ch05; //구구단
public class NestedLoopTest1 {
	public static void main(String[] args) {
		int i = 2;
		while(i <= 9) {
			System.out.println("*** "+ i + "단 ***");
			for(int j = 1; j <= 9; j++) {
				System.out.println((i+" * " + j + " = " + i * j));
			}
			System.out.println();
			i++;
		}
	}
}



package ch05; //별 삼각형 프로그램
import java.util.Scanner;
public class NestedLoopTest2 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("원하는 숫자를 입력 : ");
		int n = stdin.nextInt();
		int i = 1;
		while(i <= n) {
			int j = 1;
			while(j <= i) {
				System.out.print("*");
				j++;
			}
			System.out.println();
			i++;
		}
	}
}



package ch05;
import java.util.Scanner;
public class BreakTest1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("합계를 원하는 정수 입력 : ");
		int n = stdin.nextInt();
		int s = 0, i = 1;
		while(true) { //무한 반복문 생성
			s += i;
			if(i == n) break; //i 값이 사용자가 입력한 값과 같으면 반복문 벗어남
			i++;
		}
		System.out.println(n+"까지의 합계는 " + s);
	}
}



package ch05;
public class BreakTest2 {
	public static void main(String[] args) {
		int i, j;
		for(i = 1; i < 10; i++) {
			for(j = 1; j < i; j++) {
				if(j > 6) break;
				System.out.print(" * "); //j 값이 6보다 크면 크게 내포된 반복문을 벗어난다
			}
			System.out.println();
		}
	}
} //실행결과 :   0   1   2   3   4   5   6   6   6 (별 갯수)



package ch05;
public class BreakLabelTest1 {
	public static void main(String[] args) {
		boolean i = true;
		First:{
			Second:{
				Third:{
					System.out.println("Third Block 'break' Sentence Before");
					if(i) break Second;  //무조건 Second 블록 벗어남
					System.out.println("Third Block 'break' Sentence After");
				}
				System.out.println("Second Block Sentence");
			}
			System.out.println("First Block Sentence");
		}
		System.out.println("Main Block Sentence");
	}
} //실행 결과 : 3번째, 1번째, 메인 블록만 출력된다.



package ch05;
public class BreakLabelTest2 {
	public static void main(String[] args) {
		int i = 2, j;
		Loop : while(true) {
			j = 1;
			if(i < 10)
				System.out.println("\n---" + i + "단 === "); //9단까지만 출력
			Innerloop : while(true) { //내포된 반복문 블록에 레이블 지정
				if(j > 9) break; //내포된 반복문만 벗어난다
				if(i > 9) break Loop; //Loop 반복문을 벗어난다
				System.out.println(i+" * " + j + " = " + i*j);
				j++;
			}
			System.out.println();
			i++;
		}
	}
} //결과 : 2단부터 9단까지 생성



package ch05;
import java.util.Scanner;
public class ContinueTest1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		System.out.print("원하은 정수 입력(짝수의 합) : ");
		int n = stdin.nextInt();
		int i, sum = 0;
		for(i = 1; i <= n; i++) {
			if(i % 2 == 1) continue;
			sum += i;
		}
		System.out.println("1부터 " + n + "까지 짝수의 합 = " +sum);
	}
}



package ch05;
public class ContinueLabelTest1 {
	public static void main(String[] args) {
		int i, j;
		Outer : for(i = 2; i <= 9; i += 1) { //Outer 반복블록
			System.out.println("=== " + i + "단 ===");
			for(j = 1; j <= 9; j++) {
				if(j == 3) continue Outer; //Outer 블록 제어로 이동
				System.out.println(i+" * " + j + " = " + i*j);
			}
		}
	}
} //결과 : 2~9단까지 x2까지만 출력



package ch06;
import java.util.Scanner;
public class ArraysTest1 {
	public static void main(String[] args) {
		Scanner stdin = new Scanner(System.in);
		int i;
		double sum = 0.0, avg;
		double dnum[] = new double[5]; //1차원 double 배열 선언
		System.out.println("dnum 배열의 길이 : " + dnum.length);
		System.out.print("초기화하지 않을 dnum[]의 값 : "); //출력값 : 0.0으로 5개 전부 뜬다
		for(i = 0; i < dnum.length; i++) //for 문의 조건으로 length 속성 사용
			System.out.print(dnum[i]+" "); //초기화하지 않은 배열값 출력
		System.out.println();
		for(i = 0; i < dnum.length; i++) { //반복문을 이용하여 배열 초기화
			System.out.print("dnum["+i+"]번째 데이터 입력 : ");
			dnum[i] = stdin.nextDouble();
		}
		for(i = 0; i < dnum.length; i++) //배열 요소의 합 구하기
			sum += dnum[i];
		System.out.println("배열의 합은 " + sum + "입니다.");
		avg = sum / dnum.length;
		System.out.println("배열 값의 평균은 " + avg + "입니다.");
	}
}



package ch06;
public class ArraysTest2 {
	public static void main(String[] args) {
		int score[] = {88,97,53,62,92,68,82};
		int max = score[0];
		for(int i : score) { //for(int i = 1; i < score; i += 1)
			if(i > max) //if(score[i] > max)
				max = i; //max = score[i];
		}
		System.out.println("배열 요소의 최댓값은 " + max + "입니다.");
	}
} //결과 : 배열 요소의 최댓값은 97입니다.



package ch06;
import java.util.Scanner;
public class OneArraysTest1 {
	public static void main(String[] args) {
		int inum[] = {8, 7, 3, 6, 9, 6, 8, 7, 0, 4, 1, 2};
		Scanner stdin = new Scanner(System.in);
		System.out.print("찾고 싶은 숫자 입력 : ");
		int key = stdin.nextInt();
		int count = 0; //횟수 저장용 변수
		for(int i = 0; i < inum.length; i++) { //위치를 알아야 하므ㅗ 확장된 for문 사용 불가
			if(inum[i] == key) {//값이 지정된 값과 일치하면 count값을 증가시키고 출력
				count++;
				System.out.println((i + 1) + "번째 데이터와 일치");
			}
		}
		if(count == 0) //값이 없을 경우 횟수 없음을 출력
			System.out.println(key + "값은 배열에 없습니다.");
		else //값이 있는 경우 횟수 출력
			System.out.println(key + "값은 배열에 "+count+"개 있습니다.");
	}
}



package ch06;
public class OneArrayTest2 {
	public static void main(String[] args) {
		String slist[] = {"Seoul", "Daejeon", "Daegu", "Kwangju", "Incheon", "Jeju", "Busan"};
		System.out.print("원래의 배열 : ");
		for(String s : slist) 
			System.out.print(s + " "); //원래의 배열 출력
		System.out.println();
		for(int i = 0; i < slist.length / 2; i++) { //배열 길이의 반에 해당되는 횟수만큼 교환
			String temp = slist[i]; //하나의 새로운 변수를 만들어서 일단 여기에 복사해둔다
			slist[i] = slist[slist.length - i -1]; //slist.length는 7이다
			slist[slist.length - i - 1] = temp;
		}
		System.out.print("역순으로 재배치된 배열 : ");
		for(String s : slist)
			System.out.print(s + " "); //역순으로 재배치된 배열 출력
	}
}



package ch06;
public class CopyArraysTest1 {
	public static void main(String[] args) {
		int num1[] = {10, 20, 30};
		int num2[] = {40, 50, 60};
		num2 = num1; //배열명을 이용하여 복사
		num2[2] = 200; //num2[2]의 요소를 200으로 변경
		System.out.print("num1 배열의 값 : ");
		for(int i : num1) //num1값 출력
			System.out.print(i+" "); //num1[2]값이 200으로 출력
		System.out.print("\nnum2 배열의 값 : ");
		for(int i : num2) //num2의 값을 출력
			System.out.print(i+" ");
		int num3[] = {100, 200, 300};
		int num4[] = {400, 500, 600};
		for(int i = 0; i < num3.length; i++) 
			num4[i] = num3[i]; //배열의 요소들을 각각 복사
		num4[2] = 999;
		System.out.print("\nnum3 배열의 값 : ");
		for(int i : num3) //num3의 값을 출력, num3[2]의 값은 그대로 300 출력
			System.out.print("\nnum4 배열의 값 : ");
		for(int i : num4) //num4의 값을 출력, num3[2]의 값은 그대로 999 출력
			System.out.print(i+" ");
	}
}



package ch06;
import java.util.Random; //Random 클래스 import
public class MultiArraysTest1 {
	public static void main(String[] args) {
		Random ran = new Random(); //Random 객체 생성
		int[][] score = new int[4][4]; //2차원 배열 생성
		for(int i = 0; i < 4; i++)
			for(int j = 0; j < 4; j++)
				score[i][j] = ran.nextInt(10); //score을 0~9 난수로 초기화
		for(int k = 0; k < 4; k++) {
			int sum = 0;
			for(int value : score[k]) {
				System.out.print(value + ", "); //각 행 출력
				sum += value; //각 행 누적
			}
			System.out.println("의 합계는 " +sum);
		}
	}
}



package ch06;
public class MultiArraysTest2 {
	public static void main(String[] args) {
		int sda[][] = new int[4][];
		sda[0] = new int[1]; //각 행에 해당하는 1차원 배열 선언
		sda[1] = new int[2];
		sda[2] = new int[3];
		sda[3] = new int[4];
		System.out.println("2차원 배열에서의 행의 길이는 : " +sda.length); //각각 배열의 길이 출력
		System.out.println("첫 번째 행의 요소 수는 : " +sda[0].length); 
		System.out.println("두 번째 행의 요소 수는 : " +sda[1].length);
		System.out.println("세 번째 행의 요소 수는 : " +sda[2].length);
		System.out.println("네 번째 행의 요소 수는 : " +sda[3].length);
		int i , k = 0, j = 0;
		for(i = 0; i < sda.length; i++) //배열의 요소 초기화, 0~1씩 증가시켜 저장
			for(j = 0; j < sda[i].length; j++) {
				sda[i][j] = k;
				k++;
			}
		for(i = 0; i < sda.length; i++) { //배열 출력
			for(int val : sda[i])
				System.out.print(val +" ");
			System.out.println();
		}
	}
}



package ch06;
import java.util.Arrays;
public class ArraysCMethodTest1 {
	public static void main(String[] args) {
		int[] int1 = {9, 1, 7, 3, 5, 4, 6, 2, 8, 0};
		System.out.println("초기배열 : " +Arrays.toString(int1)); //배열 요소 출력
		Arrays.fill(int1,  3, 5, 33); //int1의 int[3]과 int[4]를 33으로 바꾼다
		System.out.println("fill() 수행 후 : " +Arrays.toString(int1));
		Arrays.sort(int1); //int1 배열을 오름차순으로 정렬
		System.out.println("sort() 수행 후 : " +Arrays.toString(int1));
		System.out.println("33은 배열의 " +Arrays.binarySearch(int1, 33)); //2진 탐색
		int[] int2 = {5, 4, 3, 2, 1};
		System.out.println("두번째 배열 : " +Arrays.toString(int2));
		System.out.println("두개의 배열이 같은가? " +Arrays.equals(int1,  int2)); //false 출력
		int[] int3 = new int[5];
		System.arraycopy(int2, 0, int3, 0, 5); //배열 복사
		System.out.println("복사된 배열 : " +Arrays.toString(int3));
	}
}



package ch06;
import java.util.Arrays;
public class ArrayCMethodTest2 {
	public static void main(String[] args) {
		String[] array1 = {"IMF", "제주도", "자바도사", "한글나라", "Computer", "모카", "JAVA", "인터넷탐색", "초롱초롱", "come", "바람", "스크립터", "군고구마", "도서", "their", "country"}; //16개의 문자열 요소
		System.out.println("==========정렬 전 데이터==========");
		System.out.println(Arrays.toString(array1));
		Arrays.sort(array1);
		System.out.println("==========정렬 후 데이터==========");
		System.out.println(Arrays.toString(array1)); //정렬된 배열 출력
		System.out.println("군고마는 배열의 " +Arrays.binarySearch(array1, "군고구마")+ "번째 요소");
		String[] array2 = array1; 
		System.out.println("array1과 array2는 같은가? : " +Arrays.equals(array1, array2)); //두 배열이 같은가? true 출력
		String[] array3 = new String[20];
		System.arraycopy(array2, 0, array3, 0, array2.length); //array2를 array3에 복사
		System.out.println("array3 배열 : " +Arrays.toString(array3)); //array3 배열 출력, 마지막 4개 요소는 null값 출력
	}
}



package ch07; 
class PlusMinus { //라이브러리 클래스 생성 = 실행은 안됨
	int add, sub;
	public String plus(int x, int y) {
		add = x + y;
		return "두 수의 합은 " +add;
	}
	public String minus(int x, int y) {
		sub = x - y;
		return "두 수의 차는 " +sub;
	}
}



package ch07;
class PlusMinusTest1 { //기존에 만든 라이브러리 클래스 이용
	public static void main(String[] args) {
		PlusMinus ob1 = new PlusMinus();
		String ssum, sminus;
		ssum = ob1.plus(50, 30);
		sminus = ob1.minus(50, 30);
		System.out.println(ssum); //두 수의 합은 80
		System.out.println(sminus); //두 수의 차는 20
	}
}



package ch07;
class MultiDiv extends PlusMinus { //라이브러리 메서드 생성, PlusMinus라는 메서드가 미리 있어야 실행된다
	int gop; //두 개의 속성 지정
	double nanum;
	public String multi(int x, int y) { //multi 메서드 지정
		gop = x * y;
		return "두 수의 곱은 " +gop;
	}
	public String div(int x, int y) { //div 메서드 지정
		nanum = (double)x / y;
		return "두 수의 나눔은 " +nanum;
	}
}
public class FourRulesTest1 { //메인 메서드
	public static void main(String[] args) {
		String splus, sminus, smulti, sdiv;
		MultiDiv ob1 = new MultiDiv(); //MultiDiv 클래스로부터 객체 생성
		splus = ob1.plus(50, 30); //객체의 메서드 호출
		sminus = ob1.minus(50, 30);
		smulti = ob1.multi(50, 30);
		sdiv = ob1.div(50, 30);
		System.out.println(splus); //결과 출력, 각각 80, 20, 1500, 1.66666666667
		System.out.println(sminus);
		System.out.println(smulti);
		System.out.println(sdiv);
	}
}



package ch08;
class Box1 { 
	int width;
	int height;
	int depth;
}

public class Box1Test {
	public static void main(String[] args) {
		Box1 mybox1 = new Box1();
		Box1 mybox2 = new Box1();
		int vol1, vol2;
		mybox1.width = 78;
		mybox1.height = 145;
		mybox1.depth = 87;
		mybox2.width = 48;
		mybox2.height = 45;
		mybox2.depth = 137;
		vol1 = mybox1.width  * mybox1 .height * mybox1.depth;
		System.out.println("첫 번째 박스의 부피는 " +vol1+ "입니다."); //983970
		vol2 = mybox2.width  * mybox2 .height * mybox2.depth;
		System.out.println("두 번째 박스의 부피는 " +vol2+ "입니다."); //295920
	}
}



package ch08;
class Box2 {
	int width = 10;
	int height = 20;
	int depth = 30; //3개의 속성 선언과 값 설정
}

public class Box2Test1 {
	public static void main(String[] args) {
		int myint1 = 100;
		int myint2 = myint1;
		System.out.println("첫 번째 값 : " +myint1+ "    두 번째 값 : " +myint2); //100, 100
		myint1 = 200;
		System.out.println("첫 번째 값 : " +myint1+ "    두 번째 값 : " +myint2); //200, 100
		Box2 mybox1 = new Box2();
		Box2 mybox2 = new Box2();
		mybox1.width = 20;
		mybox2.depth = 123;
		System.out.println("mybox1.width : " +mybox1.width); //20
		System.out.println("mybox1.height : " +mybox1.height); //20
		System.out.println("mybox1.depth : " +mybox1.depth); //30
		System.out.println("mybox2.width : " +mybox2.width); //10
		System.out.println("mybox2.height : " +mybox2.height); //20
		System.out.println("mybox2.depth : " +mybox2.depth); //123
		Box2 mybox3 = mybox2;
		mybox2.width = 1000;
		mybox2.height = 2000;
		System.out.println("mybox3.width : " +mybox3.width); //1000
		System.out.println("mybox3.width : " +mybox3.height); //2000
		System.out.println("mybox3.width : " +mybox3.depth); //123
	}
}



